import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from 'next/headers'
import { LiffProvider } from '@/providers/LiffProvider'
import "./globals.css";
import { ClientLayout } from "@/components/layout/ClientLayout";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers()
  const apptype = (await headersList).get('x-app-type')
  const isLiff = apptype === 'line'

  return (
    <html lang="th">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {isLiff ? (
          <LiffProvider liffId={process.env.NEXT_PUBLIC_LIFF_CATEGORIES!}>
            <ClientLayout>
              {children}
            </ClientLayout>
          </LiffProvider>
        ) : (
          <ClientLayout>
            {children}
          </ClientLayout>
        )}
      </body>
    </html>
  );
}
